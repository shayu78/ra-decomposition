{"version":3,"sources":["components/Container/Container.jsx","components/Teaser/Teaser.jsx","components/NewsFilter/NewsFilter.jsx","components/DateTime/DateTime.jsx","components/Quote/Quote.jsx","components/Quotes/Quotes.jsx","components/SearchFilter/SearchFilter.jsx","components/SearchForm/SearchForm.jsx","components/SearchHint/SearchHint.jsx","components/Banner/Banner.jsx","components/Widget/Widget.jsx","components/Weather/Weather.jsx","components/List/List.jsx","components/ListItem/ListItem.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["Container","props","className","children","Teaser","image","link","title","description","href","src","alt","NewsFilter","data","onSelectFilter","id_data","map","value","id","nanoid","onClick","DateTime","format","moment","Quote","item","name","delta","delta_unit","Quotes","SearchFilter","defaultProps","DEFAULT_FORM_VALUE","text","SearchForm","onHandleSubmit","useState","form","setForm","onSubmit","event","preventDefault","htmlFor","required","onChange","target","prev","SearchHint","Banner","Widget","Weather","current","night","morning","afternoon","evening","List","ListItem","titleClassName","textClassName","time","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.13115e17.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n/**\r\n * Компонент «Контейнер»: компонент для размещения дочерних компонентов.\r\n */\r\nexport default function Container(props) {\r\n  const { className } = props;\r\n\r\n  return (\r\n    <div className={className}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n}\r\n\r\nContainer.propTypes = {\r\n  className: PropTypes.string,\r\n  children: PropTypes.node,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n/**\r\n * Компонент «Завлекаловка»: формирует тизер.\r\n */\r\nexport default function Teaser(props) {\r\n  const { image, link, title, description } = props;\r\n\r\n  return (\r\n    <div className=\"teaser\">\r\n      <a className=\"teaser__link\" href={link}>\r\n        <img className=\"teaser__image\" src={image} alt=\"Изображение\" />\r\n        <h3 className=\"teaser__title\">{title}</h3>\r\n      </a>\r\n      <p className=\"teaser__description\">{description}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nTeaser.propTypes = {\r\n  image: PropTypes.string,\r\n  link: PropTypes.string.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  description: PropTypes.string.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { nanoid } from 'nanoid';\r\n\r\n/**\r\n * Компонент «Фильтр новостей»: формирует список новостных категорий.\r\n */\r\nexport default function NewsFilter(props) {\r\n  const { data, onSelectFilter } = props;\r\n\r\n  const id_data = data.map((value) => {\r\n    value.id = nanoid();\r\n    return value;\r\n  });\r\n\r\n  return (\r\n    <div className=\"news__filter\">\r\n      <ul className=\"news__filter__items\">\r\n        {id_data.map((value) => {\r\n          return <li key={value.id} className='news__filter__item'\r\n            onClick={() => onSelectFilter(value)}>\r\n              <a className='news__filter__item__link' href={value.link}>\r\n                <h3>{value.title}</h3>\r\n              </a>\r\n            </li>\r\n        })}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nNewsFilter.propTypes = {\r\n  data: PropTypes.array.isRequired,\r\n  onSelectFilter: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport moment from 'moment';\r\nimport \"moment/locale/ru\";\r\n\r\n/**\r\n * Компонент «Дата»: отображает текущую дату и время в заданном формате или по умолчанию.\r\n */\r\nexport default function DateTime(props) {\r\n  const { format } = props;\r\n\r\n  return (\r\n    <span className='date__time'>{moment().format(`${format}`)}</span>\r\n  );\r\n}\r\n\r\nDateTime.defaultProps = {\r\n  format: 'D MMMM, dddd LT',\r\n};\r\n\r\nDateTime.propTypes = {\r\n  format: PropTypes.string,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n/**\r\n * Компонент «Биржевая катировка»: формирует биржевую котировку.\r\n */\r\nexport default function Quote(props) {\r\n  const { item } = props;\r\n\r\n  return (\r\n    <li className='stocks__item'>\r\n      <a className='stocks__item__link' href={item.link}>{item.name}</a>\r\n      <span className='stocks__item__value'>{item.value}</span>\r\n      <span className='stocks__item__delta'>{item.delta}</span>\r\n      {item.delta_unit && <span className='stocks__item__delta__unit'>{item.delta_unit}</span>}\r\n  </li>\r\n  );\r\n}\r\n\r\nQuote.propTypes = {\r\n  item: PropTypes.shape({\r\n    id: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    link: PropTypes.string.isRequired,\r\n    value: PropTypes.number.isRequired,\r\n    delta: PropTypes.number.isRequired,\r\n    delta_unit: PropTypes.string,\r\n  }),\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { nanoid } from 'nanoid';\r\nimport Quote from '../Quote/Quote';\r\n\r\n/**\r\n * Компонент «Список биржевых котировок»: формирует список биржевых котировок.\r\n */\r\nexport default function Quotes(props) {\r\n  const { data } = props;\r\n\r\n  const id_data = data.map((value) => {\r\n    value.id = nanoid();\r\n    return value;\r\n  });\r\n\r\n  return (\r\n    <div className=\"stocks\">\r\n      <ul className=\"stocks__items\">\r\n        {id_data.map((value) => <Quote key={value.id} item={value} />)}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nQuotes.propTypes = {\r\n  data: PropTypes.array.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { nanoid } from 'nanoid';\r\n\r\n/**\r\n * Компонент «Фильтр поиска»: формирует список поисковых категорий.\r\n */\r\nexport default function SearchFilter(props) {\r\n  const { data, onSelectFilter } = props;\r\n\r\n  const id_data = data.map((value) => {\r\n    value.id = nanoid();\r\n    return value;\r\n  });\r\n\r\n  return (\r\n    <div className=\"search__filter\">\r\n      <ul className=\"search__filter__items\">\r\n        {id_data.map((value) => {\r\n          return <li key={value.id} className='search__filter__item'\r\n            onClick={() => onSelectFilter(value)}>\r\n              <a className='search__filter__item__link' href={value.link}>{value.title}</a>\r\n            </li>\r\n        })}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nSearchFilter.propTypes = {\r\n  data: PropTypes.array.isRequired,\r\n  onSelectFilter: PropTypes.func.isRequired,\r\n};\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst DEFAULT_FORM_VALUE = {\r\n  text: '',\r\n};\r\n\r\n/**\r\n * Компонент «Форма поиска»: формирует форму для поиска.\r\n */\r\nexport default function SearchForm(props) {\r\n  const { onHandleSubmit } = props;\r\n  const [form, setForm] = useState(DEFAULT_FORM_VALUE);\r\n\r\n  const onSubmit = (event) => {\r\n    event.preventDefault();\r\n    onHandleSubmit(form);\r\n    setForm(DEFAULT_FORM_VALUE);\r\n  }\r\n\r\n  const onInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setForm((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  return (\r\n    <form className=\"form\" onSubmit={onSubmit}>\r\n      <div className=\"form__input__container\">\r\n        <label className=\"visually-hidden\" htmlFor=\"text\">Введите запрос</label>\r\n        <input className=\"form__input\" value={form.text} name=\"text\"\r\n          id=\"text\" required onChange={onInputChange} />\r\n      </div>\r\n      <button className=\"form__button\">Найти</button>\r\n    </form>\r\n  );\r\n}\r\n\r\nSearchForm.propTypes = {\r\n  onHandleSubmit: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n/**\r\n * Компонент «Подсказка поиска»: формирует панель подсказок для поиска.\r\n */\r\nexport default function SearchHint(props) {\r\n  const { text } = props;\r\n\r\n  return (\r\n    <div className='search__hint'>\r\n      <span className='search__static__hint__text'>Найдется всё. Например, </span>\r\n      <span className='search__dynamic__hint__text'>{text}</span>\r\n    </div>\r\n  );\r\n}\r\n\r\nSearchHint.defaultProps = {\r\n  text: 'фаза луны сегодня',\r\n};\r\n\r\nSearchHint.propTypes = {\r\n  text: PropTypes.string,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n/**\r\n * Компонент «Баннер»: графический файл, помещаемый на веб-страницу и имеющий гиперссылку на рекламируемую страницу.\r\n */\r\nexport default function Banner(props) {\r\n  const { image, link } = props;\r\n\r\n  return (\r\n    <div className=\"banner\">\r\n      <a className=\"banner__link\" href={link}>\r\n        <img className=\"banner__image\" src={image} alt=\"Баннер\" />\r\n      </a>\r\n    </div>\r\n  );\r\n}\r\n\r\nBanner.propTypes = {\r\n  image: PropTypes.string,\r\n  link: PropTypes.string.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n/**\r\n * Компонент «Виджет»: формирует виджет.\r\n */\r\nexport default function Widget(props) {\r\n  const { title, link } = props;\r\n\r\n  return (\r\n    <div className=\"widget\">\r\n      <a className='widget__link' href={link}>\r\n        <h3 className='widget__header'>{title}</h3>\r\n      </a>\r\n      {props.children}\r\n    </div>\r\n  );\r\n}\r\n\r\nWidget.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  link: PropTypes.string,\r\n};\r\n","import React from 'react';\r\n\r\n/**\r\n * Компонент «Погода»: формирует основной контент виджета погоды.\r\n */\r\nexport default function Weather() {\r\n\r\n  const data = {\r\n    image: '',\r\n    temperature: {\r\n      current: '+17',\r\n      night: '+13',\r\n      morning: '+15',\r\n      afternoon: '+18',\r\n      evening: '+12',\r\n    },\r\n  }\r\n\r\n  return (\r\n    <div className=\"weather\">\r\n      <img className='weather__state__icon' src={data.image} alt=\"rain\" />\r\n      <span className='weather__currtemperature'>{data.temperature.current}</span>\r\n      <div className='weather__ondaytemperature__wrapper'>\r\n        <span className='weather__ondaytemperature'>{`Утром ${data.temperature.morning},`}</span>\r\n        <span className='weather__ondaytemperature'>{`днем ${data.temperature.afternoon}`}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { nanoid } from 'nanoid';\r\n\r\n/**\r\n * Компонент «Список»: формирует список компонентов.\r\n */\r\nexport default function List(props) {\r\n  const { className, data } = props;\r\n\r\n  const id_data = data.map((value) => {\r\n    value.id = nanoid();\r\n    return value;\r\n  });\r\n\r\n  return (\r\n    <ul className={className}>\r\n      {props.children(id_data)}\r\n    </ul>\r\n  );\r\n}\r\n\r\nList.propTypes = {\r\n  data: PropTypes.array.isRequired,\r\n  className: PropTypes.string,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n/**\r\n * Компонент «Элемент списка - ссылка»: формирует элемент списка ссылку, согласно входным данным.\r\n */\r\nexport default function ListItem(props) {\r\n  const { className, titleClassName, textClassName, item } = props;\r\n\r\n  return (\r\n    <li className={className}>\r\n      <a className=\"list__item__link\" href={item.link}>\r\n        {item.image && <img className=\"list__item__image\" src={item.image} alt=\" \" />}\r\n        {item.time && <span className=\"list__item__time\">{item.time}</span>}\r\n        {props.children && <span className={`list__item__title ${titleClassName}`}>{props.children}</span>}\r\n        {item.text && <span className={`list__item__text ${textClassName}`}>{item.text}</span>}\r\n      </a>\r\n    </li>\r\n  );\r\n}\r\n\r\nListItem.propTypes = {\r\n  className: PropTypes.string,\r\n  titleClassName: PropTypes.string,\r\n  textClassName: PropTypes.string,\r\n  item: PropTypes.object.isRequired,\r\n};\r\n","import React from 'react';\nimport './App.css';\nimport Container from './components/Container/Container';\nimport Teaser from './components/Teaser/Teaser';\nimport NewsFilter from './components/NewsFilter/NewsFilter';\nimport DateTime from './components/DateTime/DateTime';\nimport Quotes from './components/Quotes/Quotes';\nimport SearchFilter from './components/SearchFilter/SearchFilter';\nimport SearchForm from './components/SearchForm/SearchForm';\nimport SearchHint from './components/SearchHint/SearchHint';\nimport Banner from './components/Banner/Banner';\nimport Widget from './components/Widget/Widget';\nimport Weather from './components/Weather/Weather';\nimport List from './components/List/List';\nimport ListItem from './components/ListItem/ListItem';\n\nfunction App() {\n  const newsFilters = [\n    {\n      link: '#',\n      title: 'Сейчас в СМИ',\n    },\n    {\n      link: '#',\n      title: 'в Германии',\n    },\n    {\n      link: '#',\n      title: 'Рекомендуем',\n    },\n  ];\n\n  const newsResources = [\n    {\n      image: ' ',\n      link: '#',\n      title: '«Спартак» проиграл на своем поле «Рубину»',\n    },\n    {\n      image: ' ',\n      link: '#',\n      title: 'Власти Германии объяснили невозможность отказа от «Северного потока-2»',\n    },\n    {\n      image: ' ',\n      link: '#',\n      title: 'Боевой российский корабль впервые вошел в порт Судана',\n    },\n  ];\n\n  const stocksResources = [\n    {\n      name: 'USD',\n      link: '#',\n      value: 74.63,\n      delta: -0.12,\n    },\n    {\n      name: 'EUR',\n      link: '#',\n      value: 90.07,\n      delta: -0.88,\n    },\n    {\n      name: 'Нефть',\n      link: '#',\n      value: 64.49,\n      delta: -2.32,\n      delta_unit: '%',\n    },\n  ];\n\n  const searchFilters = [\n    {\n      link: '#',\n      title: 'Видео',\n    },\n    {\n      link: '#',\n      title: 'Картинки',\n    },\n    {\n      link: '#',\n      title: 'Новости',\n    },\n    {\n      link: '#',\n      title: 'Карты',\n    },\n    {\n      link: '#',\n      title: 'Маркер',\n    },\n    {\n      link: '#',\n      title: 'Еще',\n    },\n  ];\n\n  const highVisitedResources = [\n    {\n      link: '#',\n      title: 'Недвижимость',\n      text: '- о сталинках',\n    },\n    {\n      link: '#',\n      title: 'Маркет',\n      text: '- люсты и светильники',\n    },\n    {\n      link: '#',\n      title: 'Авто.ру',\n      text: '- привод 4х4 до 500 000',\n    },\n  ];\n\n  const tvGuideResources = [\n    {\n      link: '#',\n      title: 'THT.Best',\n      text: 'THT International',\n      time: '02:00',\n    },\n    {\n      link: '#',\n      title: 'Джинглики',\n      text: 'Карусель INT',\n      time: '02:15',\n    },\n    {\n      link: '#',\n      title: 'Наедине со всеми',\n      text: 'Первый',\n      time: '02:25',\n    },\n  ];\n\n  const broadcastResources = [\n    {\n      image: ' ',\n      link: '#',\n      title: 'Управление как исскуство',\n      text: 'Успех',\n    },\n    {\n      image: ' ',\n      link: '#',\n      title: 'Ночь. Мир в это время',\n      text: 'earthTV',\n    },\n    {\n      image: ' ',\n      link: '#',\n      title: 'Андрей Возн...',\n      text: 'Сов. секретно',\n    },\n  ];\n\n  const onSelectNewsFilterHandler = (value) => {\n  }\n\n  const onSelectSearchFilterHandler = (value) => {\n  }\n\n  const handleSubmit = (event) => {\n  }\n\n  return (\n    <div className='page__wrapper'>\n      <Container className='top__block'>\n        <Container className='latest__block'>\n          <Container className='newsfilter__datetime__block'>\n            <NewsFilter data={newsFilters} onSelectFilter={onSelectNewsFilterHandler} />\n            <DateTime />\n          </Container>\n          <List className='list__items' data={newsResources}>\n            {data => data.map((item) => <ListItem key={item.id} className='list__item' item={item}>{item.title}</ListItem>)}\n          </List>\n          <Quotes data={stocksResources} />\n        </Container>\n        <Teaser image='' link='#' title='Работа над ошибками' description='Смотрите на Яндексе и запоминайте' />\n      </Container>\n      <Container className='middle__block'>\n        <Container className='search__block'>\n          <SearchFilter data={searchFilters} onSelectFilter={onSelectSearchFilterHandler} />\n          <SearchForm onHandleSubmit={handleSubmit} />\n          <SearchHint />\n        </Container>\n        <Banner image='' link='#' />\n      </Container>\n      <Container className='bottom__block'>\n        <Container className='first__column'>\n          <Widget title='Погода' link='#'>\n            <Weather />\n          </Widget>\n          <Widget title='Посещаемое' link='#'>\n            <List className='list__items' data={highVisitedResources}>\n              {data => data.map((item) => <ListItem key={item.id} className='list__item' titleClassName='bold' textClassName='normal' item={item}>{item.title}</ListItem>)}\n            </List>\n          </Widget>\n        </Container>\n        <Container className='second__column'>\n          <Widget title='Карта Германии' link='#'>\n            <a className='schedule' href='#'>Расписания</a>\n          </Widget>\n          <Widget title='Телепрограмма' link='#'>\n            <a className='broadcast__view' href=\"#\">Эфир</a>\n            <List className='list__items' data={tvGuideResources}>\n              {data => data.map((item) => <ListItem key={item.id} className='list__item' item={item}>{item.title}</ListItem>)}\n            </List>\n          </Widget>\n        </Container>\n        <Container className='third__column'>\n          <Widget title='Эфир' link='#'>\n            <List className='list__items' data={broadcastResources}>\n              {data => data.map((item) => <ListItem key={item.id} className='list__item' item={item}>{item.title}</ListItem>)}\n            </List>\n          </Widget>\n        </Container>\n      </Container>\n    </div>\n  );\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}